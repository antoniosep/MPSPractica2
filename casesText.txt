DequeNodeTest:

anyadirNodoSiguiente:
Añadir un nodo siguiente a otro nodo 

anyadirNodoPrevio:
Añadir un nodo previo a otro nodo 

set_GetCorrectos:
Añadir un valor a un nodo de forma correcta

constructorCorrecto:
Si añadimos los next y previous en el constructor funciona de forma correcta

firstLastTerminal:
Tres nodos consecutivos (first, notTerminal y last) funcionan los booleanos correspondientes


DoubleEndedQueue:

peekEmptyQueue:
Hacer peekFirst y peekLast a una lista vacía

appendLeftEmptyQueue:
Añadir un nodo a una lista vacía mediante appendLeft

appendEmptyQueue:
Añadir un nodo a una lista vacía mediante append

appendLeftEmptyQueuex2:
Añadir dos nodos a una lista vacía mediante appendLeft

appendEmptyQueuex2:
Añadir dos nodos a una lista vacía mediante append

deleteFirstSingleNode:
Borrar el único nodo de una cola mediante deleteFirst

deleteFirstMultipleNodes:
Borrar el primer nodo de una cola con múltiples nodos mediante deleteFirst

deleteLastSingleNode:
Borrar el único nodo de una cola mediante deleteLast

deleteLastMultipleNodes:
Borrar el último nodo de una cola con múltiples nodos mediante deleteLast

deleteMiddleNode:
Borrar el nodo intermedio de una cola de 3 nodos mediante delete

deleteEdges:
Borrar el primer y último nodos de una cola de 3 nodos mediante delete

sizeEmptyQueue, sizeOneNode, sizeThreeNodes
Comprobar el tamaño de colas con 0, 1 y 3 nodos respectivamente

sortEmptyQueue:
<<<<<<< HEAD
Ordenar una cola vacía

sortOneNode:
Ordenar una cola de 1 nodo

sortTwoNodes:
Ordenar una cola de 2 nodos

sortThreeNodes:
Ordenar una cola de 3 nodos

sortFiveNodes:
Ordenar una cola de 5 nodos

getAtEmptyQueueNullValue:
Escoger un nodo de una cola vacía

getAtQueueNotEmptyWherePositionIsValid:
Escoger un nodo de una cola no vacía cuando la posición es correcta
=======
Sort de una cola vacía debería seguir dando null el primer elemento de la cola

sortOneNode:
Sort de una cola de un elemento debería seguir dando el primer elemento de la cola

sortTwoNode, sortThreeNodes, sortFiveNodes.
Sort de una cola desordenada de dos, tres y cinco elementos respectivamente

getAtEmptyQueueNullValue:
GetAt sobre una cola vacía debería dar null

getAtQueueNotEmptyWherePositionIsValid:
GetAt a una posición válida de una cola rellena

getAtQueueNotEmptyWherePositionIsNotValid:
GetAt a una posición inválida positiva de una cola rellena

getAtQueueNotEmptyWherePositionIsNegative:
GetAt a una posición inválida negativa de una cola rellena

findEmptyQueue:
Find de un elemento en una cola vacía debería devolver null

findElementThatIsNotInTheQueue:
Find de un elemento en una cola no vacía que no contenga dicho elemento debería devolver null

findElementThatIsInTheQueue:
Find de un elemento en una cola no vacía que sí contenga dicho elemento debería devolver el primer nodo que contenga el elemento
>>>>>>> 101d22afb022729eb1abc1135c1d954a8b928238

getAtQueueNotEmptyWherePositionIsNotValid:
Escoger un nodo de una cola no vacía cuando la posición es incorrecta

getAtQueueNotEmptyWherePositionIsNegative:
Escoger un nodo de una cola no vacía cuando la posición es negativa

findEmptyQueue:
Encontrar la posición de un elemento en una cola vacía

findElementThatIsNotInTheQueue:
Encontrar la posición de un elemento en una cola no vacía pero que no se encuentre en la cola

findElementThatIsInTheQueue:
Encontrar la posición de un elemento en una cola no vacía que se encuentre en la cola
